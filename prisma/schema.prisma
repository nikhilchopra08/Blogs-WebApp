// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String       @id @default(uuid())
  name          String       @unique
  email         String       @unique
  password_hash String
  created_at    DateTime     @default(now())
  updated_at    DateTime     @updatedAt
  posts         Post[]       @relation("PostAuthor")
  comments      Comment[]    @relation("CommentAuthor")
}

model Post {
  id          Int       @id @default(autoincrement())
  title       String
  content     String
  author      User?     @relation("PostAuthor", fields: [authorId], references: [id])
  authorId    String?   // Changed to String to match User.id
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  comments    Comment[]
  categories  Category[] @relation("PostCategory")
}

model Comment {
  id          Int       @id @default(autoincrement())
  content     String
  post        Post      @relation(fields: [postId], references: [id])
  postId      Int
  author      User?     @relation("CommentAuthor", fields: [authorId], references: [id])
  authorId    String?   // Changed to String to match User.id
  created_at  DateTime  @default(now())
}

model Category {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  description String?
  posts       Post[]    @relation("PostCategory")
}
